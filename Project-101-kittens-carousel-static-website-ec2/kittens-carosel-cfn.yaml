AWSTemplateFormatVersion: 2010-09-09
# with | we can write our description in more lines and without ""
Description: |
  This CloudFormation Template was written for
  running Kittens Carousel Static Website on EC2.
  Kittens Carousel Static Website will be
  deployed on Amazon Linux 2
  (ami-05fa00d4c63e32376) EC2 Instance with
  custom security group which allows http
  connections on port 80 and ssh port 22 from
  anywhere. Kittens Carousel Static Website
  is downloaded from my Public Github repository,
  then deployed on Apache Web Server.
Resources:
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Enable HTTP for Apache Web Server and SSH for secure connection" # Required
      SecurityGroupIngress:
        # The order of operations is not important
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

      Tags: Tags
      VpcId: "String"

  LogicalID:
    Type: AWS::EC2::Instance
    Properties:
      AdditionalInfo: "String"
      Affinity: "String"
      AvailabilityZone: "String"
      BlockDeviceMappings: BlockDeviceMappings
      CpuOptions:
        CoreCount: Number
        ThreadsPerCore: Number
      CreditSpecification:
        CPUCredits: "Number"
      DisableApiTermination: false
      EbsOptimized: false
      ElasticGpuSpecifications: ElasticGpuSpecifications
      ElasticInferenceAccelerators: ElasticInferenceAccelerators
      EnclaveOptions:
        Enabled: false
      HibernationOptions:
        Configured: false
      HostId: "String"
      HostResourceGroupArn: "String"
      IamInstanceProfile: "String"
      ImageId: "String"
      InstanceInitiatedShutdownBehavior: "String"
      InstanceType: "String"
      Ipv6AddressCount: Number
      Ipv6Addresses: Ipv6Addresses
      KernelId: "String"
      KeyName: "String"
      LaunchTemplate:
        LaunchTemplateId: "String"
        LaunchTemplateName: "String"
        Version: "String"
      LicenseSpecifications: LicenseSpecifications
      Monitoring: String
      NetworkInterfaces: NetworkInterfaces
      PlacementGroupName: "String"
      PrivateDnsNameOptions:
        EnableResourceNameDnsAAAARecord: false
        EnableResourceNameDnsARecord: false
        HostnameType: "String"
      PrivateIpAddress: "false"
      PropagateTagsToVolumeOnCreation: String
      RamdiskId: "String"
      SecurityGroupIds: SecurityGroupIds
      SecurityGroups: SecurityGroups
      SourceDestCheck: false
      SsmAssociations: SsmAssociations
      SubnetId: "String"
      Tags: Tags
      Tenancy: "String"
      UserData: "String"
      Volumes: Volumes
# here we can take an output as DNSName of cloudFormation
Outputs:
